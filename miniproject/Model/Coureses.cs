// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using miniproject.Model;
//
//    var courses = Courses.FromJson(jsonString);

namespace miniproject.Model
{
    using System;
    using System.Collections.Generic;
    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Courses
    {
        [JsonProperty("course_id")]
        public string CourseId { get; set; } // เปลี่ยนจาก long เป็น string

        [JsonProperty("course_name")]
        public string CourseName { get; set; }

        [JsonProperty("year")]
        public long Year { get; set; }

        [JsonProperty("term")]
        public long Term { get; set; }

        [JsonProperty("credits")]
        public long Credits { get; set; }

        [JsonProperty("prerequisites")]
        public List<object> Prerequisites { get; set; }

        [JsonProperty("instructor")]
        public string Instructor { get; set; }
    }

    public partial class Courses
    {
        public static List<Courses> FromJson(string json) => JsonConvert.DeserializeObject<List<Courses>>(json, miniproject.Model.Converter.Settings);
    }

    public static class CoursesSerialize
    {
        public static string ToJson(this List<Courses> self) => JsonConvert.SerializeObject(self, miniproject.Model.Converter.Settings);
    }

    internal static class CoursesConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }

    // ลบ ParseStringConverter เนื่องจากไม่จำเป็นเมื่อใช้ string
}